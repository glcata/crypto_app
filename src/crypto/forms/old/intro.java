/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crypto.forms.old;

import javax.swing.*;
import java.awt.*;

/**
 *
 * @author Catalin Glavan
 */
public class intro extends javax.swing.JPanel {

    private Image image;
    private helper helper;

    /**
     * Creates new form intro
     *
     * @param help
     */
    public intro(helper help) {
        initComponents();
        this.setDoubleBuffered(true);
        this.setOpaque(false);
        this.image = new ImageIcon(getClass().getResource("/crypto/images/left_panel1.png")).getImage();
        this.helper = help;
        //this.setPreferredSize(new Dimension(image.getWidth(this), image.getHeight(this)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exit = new javax.swing.JButton();
        minimize = new javax.swing.JButton();
        info = new javax.swing.JButton();
        next = new javax.swing.JButton();

        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/exit_off.png"))); // NOI18N
        exit.setBorder(null);
        exit.setBorderPainted(false);
        exit.setContentAreaFilled(false);
        exit.setFocusable(false);
        exit.setRequestFocusEnabled(false);
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitMousePressed(evt);
            }
        });
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        minimize.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/minimize_off.png"))); // NOI18N
        minimize.setBorder(null);
        minimize.setBorderPainted(false);
        minimize.setContentAreaFilled(false);
        minimize.setDefaultCapable(false);
        minimize.setFocusPainted(false);
        minimize.setFocusable(false);
        minimize.setRequestFocusEnabled(false);
        minimize.setVerifyInputWhenFocusTarget(false);
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        minimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeActionPerformed(evt);
            }
        });

        info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/info_off.png"))); // NOI18N
        info.setBorder(null);
        info.setContentAreaFilled(false);
        info.setFocusable(false);
        info.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                infoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                infoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                infoMousePressed(evt);
            }
        });
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/continue_off.png"))); // NOI18N
        next.setBorder(null);
        next.setBorderPainted(false);
        next.setContentAreaFilled(false);
        next.setDefaultCapable(false);
        next.setFocusPainted(false);
        next.setFocusable(false);
        next.setRequestFocusEnabled(false);
        next.setVerifyInputWhenFocusTarget(false);
        next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextMouseExited(evt);
            }
        });
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 377, Short.MAX_VALUE)
                        .addComponent(info)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minimize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exit)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(info)
                    .addComponent(minimize)
                    .addComponent(exit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 419, Short.MAX_VALUE)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        if (evt.getSource() == minimize) {
            minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/minimize_on.png")));
        }
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeActionPerformed
        if (evt.getSource() == minimize) {
            minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/minimize_on.png")));
            helper.state_minimize();
        }
    }//GEN-LAST:event_minimizeActionPerformed

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        if (evt.getSource() == minimize) {
            minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/minimize_off.png")));
        }
    }//GEN-LAST:event_minimizeMouseExited

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
        if (evt.getSource() == exit) {
            exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/exit_off.png")));
        }
    }//GEN-LAST:event_exitMouseExited

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        if (evt.getSource() == exit) {
            exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/exit_on.png")));
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
        if (evt.getSource() == exit) {
            exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/exit_on.png")));
        }
    }//GEN-LAST:event_exitMouseEntered

    private void exitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMousePressed
        if (evt.getSource() == exit) {
            // DO THIS
        }
    }//GEN-LAST:event_exitMousePressed

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        if (evt.getSource() == info) {
            info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/info_on.png")));
            // DO THIS
        }
    }//GEN-LAST:event_infoActionPerformed

    private void infoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoMouseEntered
        if (evt.getSource() == info) {
            info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/info_on.png")));
        }
    }//GEN-LAST:event_infoMouseEntered

    private void infoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoMouseExited
        if (evt.getSource() == info) {
            info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/info_off.png")));
        }
    }//GEN-LAST:event_infoMouseExited

    private void infoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoMousePressed
        if (evt.getSource() == info) {
            // DO THIS
        }
    }//GEN-LAST:event_infoMousePressed

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        if (evt.getSource() == minimize) {
            minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/minimize_off.png")));
        }
    }//GEN-LAST:event_minimizeMouseClicked

    private void nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseClicked
        if (evt.getSource() == next) {
            next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/continue_off.png")));
        }
    }//GEN-LAST:event_nextMouseClicked

    private void nextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseEntered
        if (evt.getSource() == next) {
            next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/continue_on.png")));
        }
    }//GEN-LAST:event_nextMouseEntered

    private void nextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseExited
        if (evt.getSource() == next) {
            next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/continue_off.png")));
        }
    }//GEN-LAST:event_nextMouseExited

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        if (evt.getSource() == next) {
            next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crypto/images/continue_on.png")));
            helper.step1();
        }
    }//GEN-LAST:event_nextActionPerformed

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2D = (Graphics2D) g;
        g2D.drawImage(image, 0, 0, null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JButton info;
    private javax.swing.JButton minimize;
    private javax.swing.JButton next;
    // End of variables declaration//GEN-END:variables
}
